/*
 *Imagine you landed a new job as a cashier...
 *Your quirky boss found out that you're a programmer and has a weird request about something they've been wondering for a long time.
 *Write a function that, given:
 *an amount of money
 *a list of coin denominations
 *computes the number of ways to make amount of money with coins of the available denominations.
 *Example: for amount=44 (44¢) and denominations=[1,2,3][1,2,3] (11¢, 22¢ and 33¢), your program would output 44—the number of ways to make 44¢ with those denominations:
 *1¢, 1¢, 1¢, 1¢
 *1¢, 1¢, 2¢
 *1¢, 3¢
 *2¢, 2¢
*/



import java.io.*;
import java.util.*;

/*
 * To execute Java, please define "static void main" on a class
 * named Solution.
 *
 * If you need more classes, simply define them inline.
 */

class Solution {
  public static void main(String[] args) {
    ArrayList<Integer> changes = new ArrayList<Integer>();
    for(int i = 1; i <= 3; i ++){
      changes.add(i);
    }
    get_num_changes(4, changes);
  }
  
  //Dynamic programming question
  private static void get_num_changes(int amount, ArrayList<Integer>changes){
    int[] cache = new int[amount + 1];
    cache[0] = 1;
    //Let's follow a little logic here. Coin should be looped first to prevent duplicates
    for(int j = 0; j < changes.size(); j++){
      //Loops through the changes
      for(int i = 1; i <= amount; i++){
        int coin = changes.get(j);
        int remainder = i - coin;
        if(remainder >= 0){
          cache[i] += cache[remainder];
        }
      }
    }
    System.out.println(cache[amount]);
  }
}
